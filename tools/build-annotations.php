<?php

require_once __DIR__ . "/../vendor/autoload.php";

$content = file_get_contents(__DIR__ . "/../src/ConditionBuilder.php");

$methodsArray = [];

$operatorDir = __DIR__ . "/../src/Operator/";

$files = scandir($operatorDir);

foreach ($files as $file) {
    if (substr($file, -4) === ".php") {
        $cname = substr($file, 0, -4);
        $className=  '\rain1\ConditionBuilder\Operator\\' .$cname;
        $testClass     = new \ReflectionClass($className);
        if ($testClass->isInstantiable() && $testClass->isSubclassOf(rain1\ConditionBuilder\Operator\OperatorInterface::class)) {
            $params =  $testClass->getMethod('__construct')->getParameters();
            $ps = [];
            foreach ($params as $param) {
                $parramName = $param->getName();
                $paramType = $param->getType();
                $_ps = "$paramType \$$parramName";
                if ($param->isDefaultValueAvailable()) {
                    $defaultValue = $param->getDefaultValue();
                    if (is_bool($defaultValue)) {
                        $defaultValue = $defaultValue ? "true" : "false";
                    }
                    $_ps .= " = $defaultValue";
                }
                $ps[] = $_ps;
            }
            $cname = lcfirst($cname);
            $methodsArray[] = " * @method $cname(".implode(", ", $ps)." );";
        }
    }
}

print_r($methodsArray);

$content = preg_replace('/<autogenerated-methods>.*?<\/autogenerated-methods>/si', "<autogenerated-methods>\n".implode("\n", $methodsArray)."\n * </autogenerated-methods>", $content);

file_put_contents(__DIR__ . "/../src/ConditionBuilder.php", $content);
